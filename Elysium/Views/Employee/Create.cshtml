
@using Elysium.Models
@model EmployeeViewModel
@{
    ViewBag.Title = "Home Page";
}


<script type="text/javascript">

    $(function () {
        $('.datetimepicker').datepicker();
    });
</script>

@using (Html.BeginForm(ViewData["EmployeeAction"].ToString() == "Create" ? "CreateEmployee" : "EditEmployee", "Employee", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(m => m.Id)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.FirstName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.MiddleName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.LastName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.EmailAddress, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.EmailAddress, new { htmlAttributes = new { @class = "form-control", @type = "email", @required = "required" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.SSN, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.SSN, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Position, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Position, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Office, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Office, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Salary, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Salary, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Currency, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Currency, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Department, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(m => m.Department, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.BirthDate, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.BirthDate, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.EmploymentDate, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.EmploymentDate, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-success btn-lg" value="Save" />
        </div>
    </div>
}
